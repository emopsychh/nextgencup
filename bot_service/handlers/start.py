from aiogram import Router, types, F
from aiogram.filters import CommandStart
from sqlalchemy.future import select
from database.models import User
from database.db import AsyncSessionLocal
from keyboards.main import main_menu_keyboard 
from keyboards.main import submenu_keyboard
from aiogram.utils.markdown import hbold
from datetime import datetime

router = Router()

@router.message(CommandStart())
async def register_user(message: types.Message):
    async with AsyncSessionLocal() as session:
        stmt = select(User).where(User.telegram_id == message.from_user.id)
        result = await session.execute(stmt)
        user = result.scalar_one_or_none()

        if not user:
            user = User(
                telegram_id=message.from_user.id,
                username=message.from_user.username
            )
            session.add(user)
            await session.commit()

            await message.answer(
                text=(
                    f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!\n"
                    "–¢—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —Å–∏—Å—Ç–µ–º–µ NextgenCup üèÜ\n\n"
                    "–í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –∑–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è –º–∞—Ç—á–∏, —Ç—É—Ä–Ω–∏—Ä–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!"
                ),
                reply_markup=main_menu_keyboard()
            )
        else:
            await message.answer(
                text="üëã –¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω",
                reply_markup=main_menu_keyboard()
            )
#–û –ø—Ä–æ–µ–∫—Ç–µ
@router.message(F.text == "‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ")
async def about_project(message: types.Message):
    await message.answer(
        "üß† *NextgenCup* ‚Äî —ç—Ç–æ —Ç—É—Ä–Ω–∏—Ä–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è CS2 üéÆ\n\n"
        "üîπ –£—á–∞—Å—Ç–≤—É–π –≤ —Ç—É—Ä–Ω–∏—Ä–∞—Ö\n"
        "üîπ –°–ª–µ–¥–∏ –∑–∞ —Å–≤–æ–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π\n"
        "üîπ –°–æ–±–∏—Ä–∞–π –∫–æ–º–∞–Ω–¥—É –∏ –ø–æ–±–µ–∂–¥–∞–π!\n\n"
        "–í—Å—ë —á–µ—Ä–µ–∑ Telegram ‚Äî –ø—Ä–æ—Å—Ç–æ, —É–¥–æ–±–Ω–æ –∏ –±—ã—Å—Ç—Ä–æ!",
        parse_mode="Markdown"
    )

# üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@router.message(F.text == "üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def open_main_menu(message: types.Message):
    await message.answer(
        text="üëá –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=submenu_keyboard()
    )