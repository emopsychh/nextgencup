from aiogram import Router, types, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from bot_service.keyboards.main import settings_menu_keyboard, main_menu_keyboard

router = Router()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è FAQ
def faq_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùì –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞?", callback_data="faq_how_to_use")],
        [InlineKeyboardButton(text="üîî –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è?", callback_data="faq_notifications")],
        [InlineKeyboardButton(text="üí≥ –ö–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É?", callback_data="faq_payment")]
    ])

# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
@router.message(F.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
async def show_settings(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É:", reply_markup=settings_menu_keyboard())

# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"
@router.message(F.text == "üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è")
async def notifications_reminders(message: Message):
    await message.answer("–ó–¥–µ—Å—å –±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π. –ù–∞—Å—Ç—Ä–æ–∏–º –ø–æ–∑–∂–µ.")

# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"
@router.message(F.text == "üåê –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π")
async def change_language(message: Message):
    await message.answer("–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π.")

# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ "FAQ"
@router.message(F.text == "‚ÑπÔ∏è –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã (FAQ)")
async def faq(message: Message):
    await message.answer("–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:", reply_markup=faq_keyboard())

# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è callback –æ—Ç –∫–Ω–æ–ø–æ–∫ FAQ
@router.callback_query(F.data.startswith("faq_"))
async def handle_faq_callback(callback: CallbackQuery):
    faq_answers = {
        "faq_how_to_use": "üëã –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ /start –∏ —Å–ª–µ–¥—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.",
        "faq_notifications": "üîî –ü–µ—Ä–µ–π–¥–∏ –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –≤–∫–ª—é—á–∏ –Ω—É–∂–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.",
        "faq_payment": "üí≥ –û–ø–ª–∞—Ç–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É. –í—ã–±–µ—Ä–∏ '–ü–æ–¥–ø–∏—Å–∫–∞' –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.",
    }

    data = callback.data

    if data == "faq_back":
        await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É:", reply_markup=settings_menu_keyboard())
    else:
        answer = faq_answers.get(data, "–í–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await callback.message.edit_text(answer, reply_markup=faq_keyboard())
    
    await callback.answer()