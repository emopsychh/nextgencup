# version: '3.9'

services:
  core-db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "1231"
      POSTGRES_DB: nextgencup
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d nextgencup"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  bot-service:
    build:
      context: ./bot_service
      dockerfile: Dockerfile
    container_name: bot-service
    depends_on:
      core-db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:1231@db/nextgencup 
      BOT_TOKEN: "<BOT_TOKEN>"
    command: python main.py
    restart: unless-stopped

  web-service:
    build:
      context: ./web-service
      dockerfile: Dockerfile
    container_name: web-service
    depends_on:
      core-db:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      # код для разработки (можно убрать, если не нужен hot‑reload)
      - ./web-service:/app
      # зависимости остаются из образа, не затираются
      - web-node-modules:/app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm start
    restart: unless-stopped

volumes:
  pgdata:           # для Postgres
  web-node-modules: # для node_modules в веб‑сервисе
  # bot-code:       # если захотите хранить код бота как том, раскомментируйте
